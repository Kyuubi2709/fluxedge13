apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: fluxai-
spec:
  serviceAccountName: batch-job-sa
  nodeSelector:
    kubernetes.io/hostname: "" # This is the node the workflow will run on. This will be provided by FluxEdge dynamically
  entrypoint: main
  arguments:
    parameters:
      - name: repoUrl
        value: "git@github.com:Kyuubi2709/fluxedge13-label.git" # Put in your repo URL
      - name: repoBranch
        value: "main" # Put in the branch you want to deploy
      - name: cloudflareToken
        value: "eyJhIjoiOThkNGMzYzRkZWNmMzc5ZGM0YTE4NjU0YThhYjZjYmYiLCJ0IjoiOTZhOWU5NWQtMjgwYi00MGI3LWJmNmItY2E2NmU4MWE5OWIyIiwicyI6IllURTRaVGs1Wm1JdE9HUmtZeTAwTXpJNUxUZ3hZMll0TVRrNFpUazJNbUpsTW1SaiJ9"
      # Node Selector will be dynamically added by FluxEdge
      # Deployment Information will be dynmically added by FluxEdge
  templates:
  - name: main
    steps:
      - - name: clone-repo
          template: clone-repo
          arguments:
            parameters:
              - name: repoUrl
                value: "{{workflow.parameters.repoUrl}}"
              - name: repoBranch
                value: "{{workflow.parameters.repoBranch}}"

      - - name: kustomize-build
          template: kustomize-build
          arguments:
            parameters:
              - name: nodeSelector
                value: "{{workflow.parameters.nodeSelector}}"
              - name: deploymentInformation
                value: "{{workflow.parameters.deploymentInformation}}"
            artifacts:
              - name: repo
                from: "{{steps.clone-repo.outputs.artifacts.repo}}"

      - - name: apply-kubectl
          template: apply-kubectl
          arguments:
            artifacts:
              - name: manifests
                from: "{{steps.kustomize-build.outputs.artifacts.manifests}}"

  - name: clone-repo
    inputs:
      parameters:
        - name: repoUrl
        - name: repoBranch
    container:
      image: alpine/git
      command: [sh, -c]
      args: [
        "mkdir -p ~/.ssh && cp /secret/lukaskeyfluxedge13 ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && \ 
        ssh-keyscan -H github.com >> ~/.ssh/known_hosts && \
        git clone --branch {{inputs.parameters.repoBranch}} {{inputs.parameters.repoUrl}} /workspace && \
        ls /workspace" # /secret/xxxxx this needs to be the file name you uploaded for the OPENSSH key.
      ]
      volumeMounts:
        - name: ssh-key
          mountPath: /secret
          readOnly: true
    volumes:
      - name: ssh-key
        secret:
          secretName: lukaskeyfluxedge13 # This will need to be updated based on the secret that gets created
    outputs:
      artifacts:
        - name: repo
          path: /workspace

  - name: kustomize-build
    inputs:
      parameters:
        - name: nodeSelector
        - name: cloudflareToken
        - name: deploymentInformation
      artifacts:
        - name: repo
          path: /workspace
    script:
      image: line/kubectl-kustomize
      command: [sh]
      source: |
        #!/bin/sh
        cd /workspace/overlays/edge_llama31
        # Replace placeholders in kustomization.yaml with actual values
        sed -i "s/NODE_SELECTOR/{{inputs.parameters.nodeSelector}}/g" deployment-patch.yaml
        sed -i "s/DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" deployment-patch.yaml
        sed -i "s/CLOUDFLARE_TOKEN/{{inputs.parameters.cloudflareToken}}/g" deployment-patch.yaml
        sed -i "s/DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" service-patch.yaml 
        sed -i "s/DEPLOYMENT_INFORMATION/{{inputs.parameters.deploymentInformation}}/g" kustomization.yaml 
        
        # Generate the manifests using kustomize
        kustomize build . -o /workspace/modified

        ls /workspace/modified
    outputs:
      artifacts:
        - name: manifests
          path: /workspace/modified

  - name: apply-kubectl
    inputs:
      artifacts:
        - name: manifests
          path: /workspace/modified
    container:
      image: bitnami/kubectl:1.21 
      command: [sh, -c]
      args: ["kubectl apply -f /workspace/modified"]
